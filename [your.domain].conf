###### Setup for Community Solid Server ######
# https://solidproject.org/self-hosting/css/nginx

# Your local Solid server instance
upstream [some-identifier] {
  server 127.0.0.1:[port];
}

server {
  server_name [your.domain]; # this is for IPv6

  # Proxy traffic for https://[your.domain]/ to http://localhost:[port]/

  location / {
    # Delegate to the Solid server, passing the original host and protocol
    proxy_pass http://[some-identifier]$request_uri;
    proxy_set_header X-Forwarded-Host  $host;
    proxy_set_header X-Forwarded-Proto $scheme;

    # Pass these headers from the Solid server back to the client
    proxy_pass_header Server;
    proxy_pass_header Set-Cookie;

    # Enable Websocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # Prevent ETag modification (https://github.com/solid/community-server/issues/1036)
    gzip off;
  }

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/[your.domain]/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/[your.domain]/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = [your.domain]) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  server_name [your.domain];
  listen 80;
  listen [::]:80;
    return 404; # managed by Certbot


}
